// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			shift(2), // program
			nil,      // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // l_round_par
			nil,      // r_round_par
			nil,      // l_square_par
			nil,      // r_square_par
			nil,      // l_curly_par
			nil,      // r_curly_par
			nil,      // assign
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
			nil,      // less_than
			nil,      // more_than
			nil,      // not_equal
			nil,      // add
			nil,      // rest
			nil,      // multiply
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // program
			nil,          // id
			nil,          // semicolon
			nil,          // main
			nil,          // end
			nil,          // empty
			nil,          // var
			nil,          // colon
			nil,          // comma
			nil,          // int
			nil,          // float
			nil,          // void
			nil,          // l_round_par
			nil,          // r_round_par
			nil,          // l_square_par
			nil,          // r_square_par
			nil,          // l_curly_par
			nil,          // r_curly_par
			nil,          // assign
			nil,          // if
			nil,          // else
			nil,          // while
			nil,          // do
			nil,          // print
			nil,          // cte_string
			nil,          // less_than
			nil,          // more_than
			nil,          // not_equal
			nil,          // add
			nil,          // rest
			nil,          // multiply
			nil,          // divide
			nil,          // cte_int
			nil,          // cte_float
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			shift(3), // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // l_round_par
			nil,      // r_round_par
			nil,      // l_square_par
			nil,      // r_square_par
			nil,      // l_curly_par
			nil,      // r_curly_par
			nil,      // assign
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
			nil,      // less_than
			nil,      // more_than
			nil,      // not_equal
			nil,      // add
			nil,      // rest
			nil,      // multiply
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			nil,      // id
			shift(4), // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // l_round_par
			nil,      // r_round_par
			nil,      // l_square_par
			nil,      // r_square_par
			nil,      // l_curly_par
			nil,      // r_curly_par
			nil,      // assign
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
			nil,      // less_than
			nil,      // more_than
			nil,      // not_equal
			nil,      // add
			nil,      // rest
			nil,      // multiply
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(5), // main, reduce: Vars
			nil,       // end
			nil,       // empty
			shift(7),  // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(5), // void, reduce: Vars
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(3), // main, reduce: FunctionList
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			shift(11), // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(5), // main, reduce: Vars
			nil,       // end
			nil,       // empty
			shift(7),  // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(5), // void, reduce: Vars
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(13), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			shift(15), // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(3), // main, reduce: FunctionList
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			shift(11), // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			shift(19), // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			reduce(5), // l_curly_par, reduce: Vars
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(20), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(4), // main, reduce: Vars
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(4), // void, reduce: Vars
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // colon, reduce: IdListTail
			shift(22), // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(23), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			shift(25), // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(2), // main, reduce: FunctionList
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			shift(27), // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			shift(19), // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			reduce(5), // l_curly_par, reduce: Vars
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(13), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(30), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // colon, reduce: IdList
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(31), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(33), // int
			shift(34), // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			shift(35), // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(21), // r_curly_par, reduce: StatementList
			nil,        // assign
			shift(44),  // if
			nil,        // else
			shift(46),  // while
			nil,        // do
			shift(47),  // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			shift(48), // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(21), // r_curly_par, reduce: StatementList
			nil,        // assign
			shift(44),  // if
			nil,        // else
			shift(46),  // while
			nil,        // do
			shift(47),  // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			reduce(4), // l_curly_par, reduce: Vars
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(50), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(51),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(15), // r_round_par, reduce: Params
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // colon, reduce: IdListTail
			shift(22), // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(55), // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(10), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(11), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Program
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(56), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			shift(57), // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			shift(58), // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(21), // r_curly_par, reduce: StatementList
			nil,        // assign
			shift(44),  // if
			nil,        // else
			shift(46),  // while
			nil,        // do
			shift(47),  // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(22), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(22), // r_curly_par, reduce: Statement
			nil,        // assign
			reduce(22), // if, reduce: Statement
			nil,        // else
			reduce(22), // while, reduce: Statement
			nil,        // do
			reduce(22), // print, reduce: Statement
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(23), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(23), // r_curly_par, reduce: Statement
			nil,        // assign
			reduce(23), // if, reduce: Statement
			nil,        // else
			reduce(23), // while, reduce: Statement
			nil,        // do
			reduce(23), // print, reduce: Statement
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(24), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(24), // r_curly_par, reduce: Statement
			nil,        // assign
			reduce(24), // if, reduce: Statement
			nil,        // else
			reduce(24), // while, reduce: Statement
			nil,        // do
			reduce(24), // print, reduce: Statement
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(25), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(25), // r_curly_par, reduce: Statement
			nil,        // assign
			reduce(25), // if, reduce: Statement
			nil,        // else
			reduce(25), // while, reduce: Statement
			nil,        // do
			reduce(25), // print, reduce: Statement
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(26), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(26), // r_curly_par, reduce: Statement
			nil,        // assign
			reduce(26), // if, reduce: Statement
			nil,        // else
			reduce(26), // while, reduce: Statement
			nil,        // do
			reduce(26), // print, reduce: Statement
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(60), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(62), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(33), // l_round_par, reduce: CycleHeader
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(64), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(65), // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			shift(66), // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(33), // int
			shift(34), // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(68), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			shift(69), // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(14), // r_round_par, reduce: Params
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // colon, reduce: IdListTail
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(6), // main, reduce: VarDecl
			nil,       // end
			nil,       // empty
			reduce(6), // var, reduce: VarDecl
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(6), // void, reduce: VarDecl
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(70),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			reduce(69), // r_round_par, reduce: FCallList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(75),  // add
			shift(76),  // rest
			nil,        // multiply
			nil,        // divide
			shift(80),  // cte_int
			shift(81),  // cte_float
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(83), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(87), // add
			shift(88), // rest
			nil,       // multiply
			nil,       // divide
			shift(92), // cte_int
			shift(93), // cte_float
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			reduce(19), // end, reduce: Body
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(20), // r_curly_par, reduce: StatementList
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			shift(106), // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			shift(108), // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(70),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			shift(111), // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(75),  // add
			shift(76),  // rest
			nil,        // multiply
			nil,        // divide
			shift(80),  // cte_int
			shift(81),  // cte_float
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(13), // main, reduce: Function
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			reduce(13), // void, reduce: Function
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			reduce(19), // r_square_par, reduce: Body
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(112), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(114), // int
			shift(115), // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			shift(116), // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(60), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(60), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(60), // less_than, reduce: Factor
			reduce(60), // more_than, reduce: Factor
			reduce(60), // not_equal, reduce: Factor
			reduce(60), // add, reduce: Factor
			reduce(60), // rest, reduce: Factor
			reduce(60), // multiply, reduce: Factor
			reduce(60), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(63), // id, reduce: FakeBottom
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(63), // l_round_par, reduce: FakeBottom
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(63), // add, reduce: FakeBottom
			reduce(63), // rest, reduce: FakeBottom
			nil,        // multiply
			nil,        // divide
			reduce(63), // cte_int, reduce: FakeBottom
			reduce(63), // cte_float, reduce: FakeBottom
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(117), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(71), // r_round_par, reduce: FCallListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(44), // comma, reduce: Expression
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(44), // r_round_par, reduce: Expression
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			shift(120), // less_than
			shift(121), // more_than
			shift(122), // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: ExpList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // less_than, reduce: ExpList
			reduce(50), // more_than, reduce: ExpList
			reduce(50), // not_equal, reduce: ExpList
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(70), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(75), // add
			shift(76), // rest
			nil,       // multiply
			nil,       // divide
			shift(80), // cte_int
			shift(81), // cte_float
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(70), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(75), // add
			shift(76), // rest
			nil,       // multiply
			nil,       // divide
			shift(80), // cte_int
			shift(81), // cte_float
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: TermList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // less_than, reduce: TermList
			reduce(55), // more_than, reduce: TermList
			reduce(55), // not_equal, reduce: TermList
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(59), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(59), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(59), // less_than, reduce: Factor
			reduce(59), // more_than, reduce: Factor
			reduce(59), // not_equal, reduce: Factor
			reduce(59), // add, reduce: Factor
			reduce(59), // rest, reduce: Factor
			reduce(59), // multiply, reduce: Factor
			reduce(59), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(65), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(65), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(65), // less_than, reduce: Cte
			reduce(65), // more_than, reduce: Cte
			reduce(65), // not_equal, reduce: Cte
			reduce(65), // add, reduce: Cte
			reduce(65), // rest, reduce: Cte
			reduce(65), // multiply, reduce: Cte
			reduce(65), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(66), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(66), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(66), // less_than, reduce: Cte
			reduce(66), // more_than, reduce: Cte
			reduce(66), // not_equal, reduce: Cte
			reduce(66), // add, reduce: Cte
			reduce(66), // rest, reduce: Cte
			reduce(66), // multiply, reduce: Cte
			reduce(66), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(134), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(60), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(60), // less_than, reduce: Factor
			reduce(60), // more_than, reduce: Factor
			reduce(60), // not_equal, reduce: Factor
			reduce(60), // add, reduce: Factor
			reduce(60), // rest, reduce: Factor
			reduce(60), // multiply, reduce: Factor
			reduce(60), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(135), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(44), // semicolon, reduce: Expression
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			shift(120), // less_than
			shift(121), // more_than
			shift(122), // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: ExpList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // less_than, reduce: ExpList
			reduce(50), // more_than, reduce: ExpList
			reduce(50), // not_equal, reduce: ExpList
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(83), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(87), // add
			shift(88), // rest
			nil,       // multiply
			nil,       // divide
			shift(92), // cte_int
			shift(93), // cte_float
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(83), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(87), // add
			shift(88), // rest
			nil,       // multiply
			nil,       // divide
			shift(92), // cte_int
			shift(93), // cte_float
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: TermList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // less_than, reduce: TermList
			reduce(55), // more_than, reduce: TermList
			reduce(55), // not_equal, reduce: TermList
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(59), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(59), // less_than, reduce: Factor
			reduce(59), // more_than, reduce: Factor
			reduce(59), // not_equal, reduce: Factor
			reduce(59), // add, reduce: Factor
			reduce(59), // rest, reduce: Factor
			reduce(59), // multiply, reduce: Factor
			reduce(59), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(65), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(65), // less_than, reduce: Cte
			reduce(65), // more_than, reduce: Cte
			reduce(65), // not_equal, reduce: Cte
			reduce(65), // add, reduce: Cte
			reduce(65), // rest, reduce: Cte
			reduce(65), // multiply, reduce: Cte
			reduce(65), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(66), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(66), // less_than, reduce: Cte
			reduce(66), // more_than, reduce: Cte
			reduce(66), // not_equal, reduce: Cte
			reduce(66), // add, reduce: Cte
			reduce(66), // rest, reduce: Cte
			reduce(66), // multiply, reduce: Cte
			reduce(66), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(60), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(60), // less_than, reduce: Factor
			reduce(60), // more_than, reduce: Factor
			reduce(60), // not_equal, reduce: Factor
			reduce(60), // add, reduce: Factor
			reduce(60), // rest, reduce: Factor
			reduce(60), // multiply, reduce: Factor
			reduce(60), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(144), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(44), // r_round_par, reduce: Expression
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			shift(120), // less_than
			shift(121), // more_than
			shift(122), // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // less_than, reduce: ExpList
			reduce(50), // more_than, reduce: ExpList
			reduce(50), // not_equal, reduce: ExpList
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // less_than, reduce: TermList
			reduce(55), // more_than, reduce: TermList
			reduce(55), // not_equal, reduce: TermList
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(59), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(59), // less_than, reduce: Factor
			reduce(59), // more_than, reduce: Factor
			reduce(59), // not_equal, reduce: Factor
			reduce(59), // add, reduce: Factor
			reduce(59), // rest, reduce: Factor
			reduce(59), // multiply, reduce: Factor
			reduce(59), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(65), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(65), // less_than, reduce: Cte
			reduce(65), // more_than, reduce: Cte
			reduce(65), // not_equal, reduce: Cte
			reduce(65), // add, reduce: Cte
			reduce(65), // rest, reduce: Cte
			reduce(65), // multiply, reduce: Cte
			reduce(65), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(66), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(66), // less_than, reduce: Cte
			reduce(66), // more_than, reduce: Cte
			reduce(66), // not_equal, reduce: Cte
			reduce(66), // add, reduce: Cte
			reduce(66), // rest, reduce: Cte
			reduce(66), // multiply, reduce: Cte
			reduce(66), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(31), // semicolon, reduce: Else
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			shift(154), // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(21), // r_curly_par, reduce: StatementList
			nil,        // assign
			shift(44),  // if
			nil,        // else
			shift(46),  // while
			nil,        // do
			shift(47),  // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(156), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			shift(158), // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(159), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(42), // r_round_par, reduce: PrintListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(161), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(159), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(42), // r_round_par, reduce: PrintListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			reduce(6), // var, reduce: VarDecl
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			reduce(6), // l_curly_par, reduce: VarDecl
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			nil,       // add
			nil,       // rest
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(163), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(18), // r_round_par, reduce: ParamListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(10), // comma, reduce: Type
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(10), // r_round_par, reduce: Type
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(11), // comma, reduce: Type
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(11), // r_round_par, reduce: Type
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			reduce(12), // var, reduce: FunctionHeader
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			reduce(12), // l_curly_par, reduce: FunctionHeader
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(70), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(75), // add
			shift(76), // rest
			nil,       // multiply
			nil,       // divide
			shift(80), // cte_int
			shift(81), // cte_float
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(68), // r_round_par, reduce: FCallList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(166), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(169), // add
			shift(170), // rest
			nil,        // multiply
			nil,        // divide
			shift(174), // cte_int
			shift(175), // cte_float
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(45), // id, reduce: Operator
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(45), // l_round_par, reduce: Operator
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(45), // add, reduce: Operator
			reduce(45), // rest, reduce: Operator
			nil,        // multiply
			nil,        // divide
			reduce(45), // cte_int, reduce: Operator
			reduce(45), // cte_float, reduce: Operator
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(46), // id, reduce: Operator
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(46), // l_round_par, reduce: Operator
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(46), // add, reduce: Operator
			reduce(46), // rest, reduce: Operator
			nil,        // multiply
			nil,        // divide
			reduce(46), // cte_int, reduce: Operator
			reduce(46), // cte_float, reduce: Operator
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(47), // id, reduce: Operator
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(47), // l_round_par, reduce: Operator
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(47), // add, reduce: Operator
			reduce(47), // rest, reduce: Operator
			nil,        // multiply
			nil,        // divide
			reduce(47), // cte_int, reduce: Operator
			reduce(47), // cte_float, reduce: Operator
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(48), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(48), // r_round_par, reduce: Exp
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(48), // less_than, reduce: Exp
			reduce(48), // more_than, reduce: Exp
			reduce(48), // not_equal, reduce: Exp
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(70), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(75), // add
			shift(76), // rest
			nil,       // multiply
			nil,       // divide
			shift(80), // cte_int
			shift(81), // cte_float
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(51), // id, reduce: OperatorAdd
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(51), // l_round_par, reduce: OperatorAdd
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(51), // add, reduce: OperatorAdd
			reduce(51), // rest, reduce: OperatorAdd
			nil,        // multiply
			nil,        // divide
			reduce(51), // cte_int, reduce: OperatorAdd
			reduce(51), // cte_float, reduce: OperatorAdd
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(52), // id, reduce: OperatorAdd
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(52), // l_round_par, reduce: OperatorAdd
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(52), // add, reduce: OperatorAdd
			reduce(52), // rest, reduce: OperatorAdd
			nil,        // multiply
			nil,        // divide
			reduce(52), // cte_int, reduce: OperatorAdd
			reduce(52), // cte_float, reduce: OperatorAdd
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(61), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(61), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(61), // less_than, reduce: Factor
			reduce(61), // more_than, reduce: Factor
			reduce(61), // not_equal, reduce: Factor
			reduce(61), // add, reduce: Factor
			reduce(61), // rest, reduce: Factor
			reduce(61), // multiply, reduce: Factor
			reduce(61), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(62), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(62), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(62), // less_than, reduce: Factor
			reduce(62), // more_than, reduce: Factor
			reduce(62), // not_equal, reduce: Factor
			reduce(62), // add, reduce: Factor
			reduce(62), // rest, reduce: Factor
			reduce(62), // multiply, reduce: Factor
			reduce(62), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(53), // r_round_par, reduce: Term
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // less_than, reduce: Term
			reduce(53), // more_than, reduce: Term
			reduce(53), // not_equal, reduce: Term
			reduce(53), // add, reduce: Term
			reduce(53), // rest, reduce: Term
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(70), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(75), // add
			shift(76), // rest
			nil,       // multiply
			nil,       // divide
			shift(80), // cte_int
			shift(81), // cte_float
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(56), // id, reduce: OperatorMul
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(56), // l_round_par, reduce: OperatorMul
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(56), // add, reduce: OperatorMul
			reduce(56), // rest, reduce: OperatorMul
			nil,        // multiply
			nil,        // divide
			reduce(56), // cte_int, reduce: OperatorMul
			reduce(56), // cte_float, reduce: OperatorMul
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(57), // id, reduce: OperatorMul
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(57), // l_round_par, reduce: OperatorMul
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(57), // add, reduce: OperatorMul
			reduce(57), // rest, reduce: OperatorMul
			nil,        // multiply
			nil,        // divide
			reduce(57), // cte_int, reduce: OperatorMul
			reduce(57), // cte_float, reduce: OperatorMul
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(178), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(180), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(27), // id, reduce: Assign
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(27), // r_curly_par, reduce: Assign
			nil,        // assign
			reduce(27), // if, reduce: Assign
			nil,        // else
			reduce(27), // while, reduce: Assign
			nil,        // do
			reduce(27), // print, reduce: Assign
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(181), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(184), // add
			shift(185), // rest
			nil,        // multiply
			nil,        // divide
			shift(189), // cte_int
			shift(190), // cte_float
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(48), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(48), // less_than, reduce: Exp
			reduce(48), // more_than, reduce: Exp
			reduce(48), // not_equal, reduce: Exp
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(83), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(87), // add
			shift(88), // rest
			nil,       // multiply
			nil,       // divide
			shift(92), // cte_int
			shift(93), // cte_float
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(61), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(61), // less_than, reduce: Factor
			reduce(61), // more_than, reduce: Factor
			reduce(61), // not_equal, reduce: Factor
			reduce(61), // add, reduce: Factor
			reduce(61), // rest, reduce: Factor
			reduce(61), // multiply, reduce: Factor
			reduce(61), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(62), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(62), // less_than, reduce: Factor
			reduce(62), // more_than, reduce: Factor
			reduce(62), // not_equal, reduce: Factor
			reduce(62), // add, reduce: Factor
			reduce(62), // rest, reduce: Factor
			reduce(62), // multiply, reduce: Factor
			reduce(62), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // less_than, reduce: Term
			reduce(53), // more_than, reduce: Term
			reduce(53), // not_equal, reduce: Term
			reduce(53), // add, reduce: Term
			reduce(53), // rest, reduce: Term
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(83), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(71), // l_round_par
			nil,       // r_round_par
			nil,       // l_square_par
			nil,       // r_square_par
			nil,       // l_curly_par
			nil,       // r_curly_par
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // less_than
			nil,       // more_than
			nil,       // not_equal
			shift(87), // add
			shift(88), // rest
			nil,       // multiply
			nil,       // divide
			shift(92), // cte_int
			shift(93), // cte_float
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(193), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			reduce(29), // l_curly_par, reduce: ConditionTail
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(195), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(198), // add
			shift(199), // rest
			nil,        // multiply
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(48), // r_round_par, reduce: Exp
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(48), // less_than, reduce: Exp
			reduce(48), // more_than, reduce: Exp
			reduce(48), // not_equal, reduce: Exp
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(61), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(61), // less_than, reduce: Factor
			reduce(61), // more_than, reduce: Factor
			reduce(61), // not_equal, reduce: Factor
			reduce(61), // add, reduce: Factor
			reduce(61), // rest, reduce: Factor
			reduce(61), // multiply, reduce: Factor
			reduce(61), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(62), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(62), // less_than, reduce: Factor
			reduce(62), // more_than, reduce: Factor
			reduce(62), // not_equal, reduce: Factor
			reduce(62), // add, reduce: Factor
			reduce(62), // rest, reduce: Factor
			reduce(62), // multiply, reduce: Factor
			reduce(62), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(53), // r_round_par, reduce: Term
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // less_than, reduce: Term
			reduce(53), // more_than, reduce: Term
			reduce(53), // not_equal, reduce: Term
			reduce(53), // add, reduce: Term
			reduce(53), // rest, reduce: Term
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(207), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(209), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			reduce(32), // l_curly_par, reduce: ElseTail
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			shift(211), // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			reduce(35), // do, reduce: CycleExpression
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(36), // semicolon, reduce: CycleTail
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(21), // r_curly_par, reduce: StatementList
			nil,        // assign
			shift(44),  // if
			nil,        // else
			shift(46),  // while
			nil,        // do
			shift(47),  // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(70),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			shift(215), // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(75),  // add
			shift(76),  // rest
			nil,        // multiply
			nil,        // divide
			shift(80),  // cte_int
			shift(81),  // cte_float
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(38), // r_round_par, reduce: PrintList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(216), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(39), // r_round_par, reduce: PrintList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(217), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(16), // r_round_par, reduce: ParamList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(117), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(71), // r_round_par, reduce: FCallListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(60), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(60), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(60), // add, reduce: Factor
			reduce(60), // rest, reduce: Factor
			reduce(60), // multiply, reduce: Factor
			reduce(60), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(43), // comma, reduce: Expression
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(43), // r_round_par, reduce: Expression
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: ExpList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(166), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(169), // add
			shift(170), // rest
			nil,        // multiply
			nil,        // divide
			shift(174), // cte_int
			shift(175), // cte_float
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(166), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(169), // add
			shift(170), // rest
			nil,        // multiply
			nil,        // divide
			shift(174), // cte_int
			shift(175), // cte_float
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: TermList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(59), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(59), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(59), // add, reduce: Factor
			reduce(59), // rest, reduce: Factor
			reduce(59), // multiply, reduce: Factor
			reduce(59), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(65), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(65), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(65), // add, reduce: Cte
			reduce(65), // rest, reduce: Cte
			reduce(65), // multiply, reduce: Cte
			reduce(65), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(66), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(66), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(66), // add, reduce: Cte
			reduce(66), // rest, reduce: Cte
			reduce(66), // multiply, reduce: Cte
			reduce(66), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: ExpList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // less_than, reduce: ExpList
			reduce(50), // more_than, reduce: ExpList
			reduce(50), // not_equal, reduce: ExpList
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: TermList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // less_than, reduce: TermList
			reduce(55), // more_than, reduce: TermList
			reduce(55), // not_equal, reduce: TermList
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(64), // comma, reduce: CloseParen
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(64), // r_round_par, reduce: CloseParen
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(64), // less_than, reduce: CloseParen
			reduce(64), // more_than, reduce: CloseParen
			reduce(64), // not_equal, reduce: CloseParen
			reduce(64), // add, reduce: CloseParen
			reduce(64), // rest, reduce: CloseParen
			reduce(64), // multiply, reduce: CloseParen
			reduce(64), // divide, reduce: CloseParen
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(58), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(58), // less_than, reduce: Factor
			reduce(58), // more_than, reduce: Factor
			reduce(58), // not_equal, reduce: Factor
			reduce(58), // add, reduce: Factor
			reduce(58), // rest, reduce: Factor
			reduce(58), // multiply, reduce: Factor
			reduce(58), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(67), // id, reduce: FCall
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(67), // r_curly_par, reduce: FCall
			nil,        // assign
			reduce(67), // if, reduce: FCall
			nil,        // else
			reduce(67), // while, reduce: FCall
			nil,        // do
			reduce(67), // print, reduce: FCall
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(60), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(60), // add, reduce: Factor
			reduce(60), // rest, reduce: Factor
			reduce(60), // multiply, reduce: Factor
			reduce(60), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(43), // semicolon, reduce: Expression
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: ExpList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(181), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(184), // add
			shift(185), // rest
			nil,        // multiply
			nil,        // divide
			shift(189), // cte_int
			shift(190), // cte_float
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(181), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(184), // add
			shift(185), // rest
			nil,        // multiply
			nil,        // divide
			shift(189), // cte_int
			shift(190), // cte_float
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: TermList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(59), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(59), // add, reduce: Factor
			reduce(59), // rest, reduce: Factor
			reduce(59), // multiply, reduce: Factor
			reduce(59), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(65), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(65), // add, reduce: Cte
			reduce(65), // rest, reduce: Cte
			reduce(65), // multiply, reduce: Cte
			reduce(65), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(66), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(66), // add, reduce: Cte
			reduce(66), // rest, reduce: Cte
			reduce(66), // multiply, reduce: Cte
			reduce(66), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: ExpList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // less_than, reduce: ExpList
			reduce(50), // more_than, reduce: ExpList
			reduce(50), // not_equal, reduce: ExpList
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: TermList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // less_than, reduce: TermList
			reduce(55), // more_than, reduce: TermList
			reduce(55), // not_equal, reduce: TermList
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(64), // semicolon, reduce: CloseParen
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(64), // less_than, reduce: CloseParen
			reduce(64), // more_than, reduce: CloseParen
			reduce(64), // not_equal, reduce: CloseParen
			reduce(64), // add, reduce: CloseParen
			reduce(64), // rest, reduce: CloseParen
			reduce(64), // multiply, reduce: CloseParen
			reduce(64), // divide, reduce: CloseParen
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(58), // less_than, reduce: Factor
			reduce(58), // more_than, reduce: Factor
			reduce(58), // not_equal, reduce: Factor
			reduce(58), // add, reduce: Factor
			reduce(58), // rest, reduce: Factor
			reduce(58), // multiply, reduce: Factor
			reduce(58), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(60), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(60), // add, reduce: Factor
			reduce(60), // rest, reduce: Factor
			reduce(60), // multiply, reduce: Factor
			reduce(60), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(43), // r_round_par, reduce: Expression
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(195), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(198), // add
			shift(199), // rest
			nil,        // multiply
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(195), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(198), // add
			shift(199), // rest
			nil,        // multiply
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(98),  // add
			shift(99),  // rest
			nil,        // multiply
			nil,        // divide
			shift(103), // cte_int
			shift(104), // cte_float
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(59), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(59), // add, reduce: Factor
			reduce(59), // rest, reduce: Factor
			reduce(59), // multiply, reduce: Factor
			reduce(59), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(65), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(65), // add, reduce: Cte
			reduce(65), // rest, reduce: Cte
			reduce(65), // multiply, reduce: Cte
			reduce(65), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(66), // r_round_par, reduce: Cte
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(66), // add, reduce: Cte
			reduce(66), // rest, reduce: Cte
			reduce(66), // multiply, reduce: Cte
			reduce(66), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // less_than, reduce: ExpList
			reduce(50), // more_than, reduce: ExpList
			reduce(50), // not_equal, reduce: ExpList
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // less_than, reduce: TermList
			reduce(55), // more_than, reduce: TermList
			reduce(55), // not_equal, reduce: TermList
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(64), // r_round_par, reduce: CloseParen
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(64), // less_than, reduce: CloseParen
			reduce(64), // more_than, reduce: CloseParen
			reduce(64), // not_equal, reduce: CloseParen
			reduce(64), // add, reduce: CloseParen
			reduce(64), // rest, reduce: CloseParen
			reduce(64), // multiply, reduce: CloseParen
			reduce(64), // divide, reduce: CloseParen
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(58), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(58), // less_than, reduce: Factor
			reduce(58), // more_than, reduce: Factor
			reduce(58), // not_equal, reduce: Factor
			reduce(58), // add, reduce: Factor
			reduce(58), // rest, reduce: Factor
			reduce(58), // multiply, reduce: Factor
			reduce(58), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(28), // id, reduce: Condition
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(28), // r_curly_par, reduce: Condition
			nil,        // assign
			reduce(28), // if, reduce: Condition
			nil,        // else
			reduce(28), // while, reduce: Condition
			nil,        // do
			reduce(28), // print, reduce: Condition
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			shift(158), // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(19), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			reduce(19), // else, reduce: Body
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(247), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			shift(248), // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(159), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(42), // r_round_par, reduce: PrintListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(159), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(42), // r_round_par, reduce: PrintListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(37), // id, reduce: Print
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(37), // r_curly_par, reduce: Print
			nil,        // assign
			reduce(37), // if, reduce: Print
			nil,        // else
			reduce(37), // while, reduce: Print
			nil,        // do
			reduce(37), // print, reduce: Print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(251), // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(70), // r_round_par, reduce: FCallListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(48), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(48), // r_round_par, reduce: Exp
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(166), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(169), // add
			shift(170), // rest
			nil,        // multiply
			nil,        // divide
			shift(174), // cte_int
			shift(175), // cte_float
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(61), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(61), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(61), // add, reduce: Factor
			reduce(61), // rest, reduce: Factor
			reduce(61), // multiply, reduce: Factor
			reduce(61), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(62), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(62), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(62), // add, reduce: Factor
			reduce(62), // rest, reduce: Factor
			reduce(62), // multiply, reduce: Factor
			reduce(62), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(53), // r_round_par, reduce: Term
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(53), // add, reduce: Term
			reduce(53), // rest, reduce: Term
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(166), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(169), // add
			shift(170), // rest
			nil,        // multiply
			nil,        // divide
			shift(174), // cte_int
			shift(175), // cte_float
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(254), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(49), // comma, reduce: ExpList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(49), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(49), // less_than, reduce: ExpList
			reduce(49), // more_than, reduce: ExpList
			reduce(49), // not_equal, reduce: ExpList
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: TermList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(54), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // less_than, reduce: TermList
			reduce(54), // more_than, reduce: TermList
			reduce(54), // not_equal, reduce: TermList
			reduce(54), // add, reduce: TermList
			reduce(54), // rest, reduce: TermList
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(48), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(181), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(184), // add
			shift(185), // rest
			nil,        // multiply
			nil,        // divide
			shift(189), // cte_int
			shift(190), // cte_float
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(61), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(61), // add, reduce: Factor
			reduce(61), // rest, reduce: Factor
			reduce(61), // multiply, reduce: Factor
			reduce(61), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(62), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(62), // add, reduce: Factor
			reduce(62), // rest, reduce: Factor
			reduce(62), // multiply, reduce: Factor
			reduce(62), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(53), // add, reduce: Term
			reduce(53), // rest, reduce: Term
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(181), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(184), // add
			shift(185), // rest
			nil,        // multiply
			nil,        // divide
			shift(189), // cte_int
			shift(190), // cte_float
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(258), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(49), // semicolon, reduce: ExpList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(49), // less_than, reduce: ExpList
			reduce(49), // more_than, reduce: ExpList
			reduce(49), // not_equal, reduce: ExpList
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: TermList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // less_than, reduce: TermList
			reduce(54), // more_than, reduce: TermList
			reduce(54), // not_equal, reduce: TermList
			reduce(54), // add, reduce: TermList
			reduce(54), // rest, reduce: TermList
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(48), // r_round_par, reduce: Exp
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(195), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(198), // add
			shift(199), // rest
			nil,        // multiply
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(61), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(61), // add, reduce: Factor
			reduce(61), // rest, reduce: Factor
			reduce(61), // multiply, reduce: Factor
			reduce(61), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(62), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(62), // add, reduce: Factor
			reduce(62), // rest, reduce: Factor
			reduce(62), // multiply, reduce: Factor
			reduce(62), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(53), // r_round_par, reduce: Term
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(53), // add, reduce: Term
			reduce(53), // rest, reduce: Term
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(195), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(71),  // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(198), // add
			shift(199), // rest
			nil,        // multiply
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			shift(262), // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(49), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(49), // less_than, reduce: ExpList
			reduce(49), // more_than, reduce: ExpList
			reduce(49), // not_equal, reduce: ExpList
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(54), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // less_than, reduce: TermList
			reduce(54), // more_than, reduce: TermList
			reduce(54), // not_equal, reduce: TermList
			reduce(54), // add, reduce: TermList
			reduce(54), // rest, reduce: TermList
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(30), // semicolon, reduce: Else
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(34), // id, reduce: Cycle
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			reduce(34), // r_curly_par, reduce: Cycle
			nil,        // assign
			reduce(34), // if, reduce: Cycle
			nil,        // else
			reduce(34), // while, reduce: Cycle
			nil,        // do
			reduce(34), // print, reduce: Cycle
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(19), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(40), // r_round_par, reduce: PrintListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(41), // r_round_par, reduce: PrintListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(114), // int
			shift(115), // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: ExpList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: TermList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(64), // comma, reduce: CloseParen
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(64), // r_round_par, reduce: CloseParen
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(64), // add, reduce: CloseParen
			reduce(64), // rest, reduce: CloseParen
			reduce(64), // multiply, reduce: CloseParen
			reduce(64), // divide, reduce: CloseParen
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(58), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(58), // add, reduce: Factor
			reduce(58), // rest, reduce: Factor
			reduce(58), // multiply, reduce: Factor
			reduce(58), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: ExpList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: TermList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(64), // semicolon, reduce: CloseParen
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(64), // add, reduce: CloseParen
			reduce(64), // rest, reduce: CloseParen
			reduce(64), // multiply, reduce: CloseParen
			reduce(64), // divide, reduce: CloseParen
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(58), // add, reduce: Factor
			reduce(58), // rest, reduce: Factor
			reduce(58), // multiply, reduce: Factor
			reduce(58), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(50), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			shift(125), // add
			shift(126), // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(55), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(55), // add, reduce: TermList
			reduce(55), // rest, reduce: TermList
			shift(131), // multiply
			shift(132), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(64), // r_round_par, reduce: CloseParen
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(64), // add, reduce: CloseParen
			reduce(64), // rest, reduce: CloseParen
			reduce(64), // multiply, reduce: CloseParen
			reduce(64), // divide, reduce: CloseParen
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(58), // r_round_par, reduce: Factor
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(58), // add, reduce: Factor
			reduce(58), // rest, reduce: Factor
			reduce(58), // multiply, reduce: Factor
			reduce(58), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(163), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(18), // r_round_par, reduce: ParamListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(49), // comma, reduce: ExpList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(49), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: TermList
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(54), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(54), // add, reduce: TermList
			reduce(54), // rest, reduce: TermList
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(49), // semicolon, reduce: ExpList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: TermList
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			nil,        // r_round_par
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(54), // add, reduce: TermList
			reduce(54), // rest, reduce: TermList
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(49), // r_round_par, reduce: ExpList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(54), // r_round_par, reduce: TermList
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			reduce(54), // add, reduce: TermList
			reduce(54), // rest, reduce: TermList
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // l_round_par
			reduce(17), // r_round_par, reduce: ParamListTail
			nil,        // l_square_par
			nil,        // r_square_par
			nil,        // l_curly_par
			nil,        // r_curly_par
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // less_than
			nil,        // more_than
			nil,        // not_equal
			nil,        // add
			nil,        // rest
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
}
